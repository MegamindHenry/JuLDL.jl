var documenterSearchIndex = {"docs":
[{"location":"#Package-Guilds","page":"Home","title":"Package Guilds","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documenter can be installed using the Julia package manager vie GitHub HTTPS Links. From the Julia REPL, type ] to enter the Pkg REPL mode and run","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add https://github.com/MegamindHenry/JuLDL.jl.git","category":"page"},{"location":"","page":"Home","title":"Home","text":"note: Note\npynld mode methods is not tested yet!","category":"page"},{"location":"#Someother-sections","page":"Home","title":"Someother sections","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"some other docs","category":"page"},{"location":"man/make_cue_matrix/","page":"Make Cue Matrix","title":"Make Cue Matrix","text":"CurrentModule = JuLDL","category":"page"},{"location":"man/make_cue_matrix/#Make-Cue-Matrix","page":"Make Cue Matrix","title":"Make Cue Matrix","text":"","category":"section"},{"location":"man/make_cue_matrix/","page":"Make Cue Matrix","title":"Make Cue Matrix","text":"  Cue_Matrix_Struct","category":"page"},{"location":"man/make_cue_matrix/#JuLDL.Cue_Matrix_Struct","page":"Make Cue Matrix","title":"JuLDL.Cue_Matrix_Struct","text":"a struct that store info after makecuematrix C is the cue matrix f2i is the dictionary return indices giving features i2f is in another hand return features when giving indices gold_ind stores gold paths within a list of indices A is the adjacency matrix\n\n\n\n\n\n","category":"type"},{"location":"man/make_cue_matrix/","page":"Make Cue Matrix","title":"Make Cue Matrix","text":"  make_cue_matrix(::DataFrame)","category":"page"},{"location":"man/make_cue_matrix/#JuLDL.make_cue_matrix-Tuple{DataFrames.DataFrame}","page":"Make Cue Matrix","title":"JuLDL.make_cue_matrix","text":"makecuematrix(::DataFrame)\n\nThis function make cue matrix and corresponding indices giving dataset as csv file.\n\nlatin = CSV.DataFrame!(CSV.File(joinpath(\"data\", \"latin_mini.csv\")))\nlatin_cue_obj_train = JuLDL.make_cue_matrix(\n  latin,\n  grams=3,\n  words_column=:Word,\n  tokenized=false,\n  keep_sep=false\n  )\n\n\n\n\n\n","category":"method"},{"location":"man/make_cue_matrix/","page":"Make Cue Matrix","title":"Make Cue Matrix","text":"  make_cue_matrix(::DataFrame,::Cue_Matrix_Struct)","category":"page"},{"location":"man/make_cue_matrix/#JuLDL.make_cue_matrix-Tuple{DataFrames.DataFrame,JuLDL.Cue_Matrix_Struct}","page":"Make Cue Matrix","title":"JuLDL.make_cue_matrix","text":"makecuematrix(::DataFrame,::CueMatrixStruct)\n\nThis function make cue matrix and corresponding indices giving dataset as csv file and train dataset cue obj. This is often used to construct valcueobj, in order to maintain the same indices.\n\nlatin = CSV.DataFrame!(CSV.File(joinpath(\"data\", \"latin_mini.csv\")))\nlatin_cue_obj_train = JuLDL.make_cue_matrix(\n  latin,\n  grams=3,\n  words_column=:Word,\n  tokenized=false,\n  keep_sep=false\n  )\n# simulate the val dataset. Notice here that latin_val is part of training dataset to make\n# sure all features and n-grams covered by training dataset.\nlatin_val = latin[101:150,:]\nlatin_cue_obj_val = JuLDL.make_cue_matrix(\n  latin_val,\n  latin_cue_obj_train,\n  grams=3,\n  words_column=:Word,\n  tokenized=false,\n  keep_sep=false\n  )\n\n\n\n\n\n","category":"method"},{"location":"man/make_cue_matrix/","page":"Make Cue Matrix","title":"Make Cue Matrix","text":"  make_ngrams(::Array,::Int64,::Bool,::Union{Nothing, String, Char},::Union{String, Char})","category":"page"},{"location":"man/make_cue_matrix/#JuLDL.make_ngrams-Tuple{Array,Int64,Bool,Union{Nothing, Char, String},Union{Char, String}}","page":"Make Cue Matrix","title":"JuLDL.make_ngrams","text":"make_ngrams(::Array,::Int64,::Bool,   ::Union{Nothing, String, Char},::Union{String, Char}\n\ngiven a list of tokens, return all ngrams in a list\n\n\n\n\n\n","category":"method"}]
}
